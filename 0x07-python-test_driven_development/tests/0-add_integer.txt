                        #############################
                        # TEST 0-add_integer MODULE #
                        #############################

Import module
>>> add_integer = __import__('0-add_integer').add_integer

                    ***************************************

if there is enough lines in module
>>> moduleLine = __import__('0-add_integer').__doc__
>>> len(moduleLine) > 5
True

                    ***************************************

if there is enough line in function
>>> functionLines = __import__('0-add_integer').add_integer.__doc__
>>> len(functionLines) > 5
True

                    ***************************************

add two posivites integers in stdout
>>> print(add_integer(1, 2))
3

                    ***************************************

add positive and negative integers in stdout
>>> print(add_integer(100, -2))
98

                    ***************************************

add negative and positive integers in stdout
>>> print(add_integer(-10, 100))
90

                    ***************************************

add integer a to already set integer b in stdout
>>> print(add_integer(2))
100

                    ***************************************

add float and negative integer in stdout
>>> print(add_integer(100.3, -2))
98

                    ***************************************

add integer and None in stdout
>>> print(add_integer(98, None))
Traceback (most recent call last):
...
TypeError: b must be an integer

                    ***************************************

add integer and string in stdout
>>> print(add_integer(4, "School"))
Traceback (most recent call last):
...
TypeError: b must be an integer

                    ***************************************

add None and already set integer in stdout
>>> print(add_integer(None))
Traceback (most recent call last):
...
TypeError: a must be an integer

                    ***************************************